#!/usr/bin/make -f
# Makefile then depends on the json files + the configure script
# Configure script:
# - detects which DL tool to use
# - sets up rules for DL by hash
# 	- ISO depends on %.sum
#	- %.sum runs always (depend on FORCE)
#   - %.sum

SHELL := /bin/sh -eu
PACKER := packer

BASE_FILE = _BASE_FILE_

BOX_NAMES = _BOX_NAMES_

BOX_DIR = _BOX_DIR_

ISO_DIR = _ISO_DIR_

ISO_NAMES = _ISO_NAMES_

CONFIG_DIR = _CONFIG_DIR_

ERROR_MODE = _ERROR_MODE_

RELEASE_NAMES = _RELEASE_NAMES_

RELEASE_FILES = $(addsuffix .json,$(RELEASE_NAMES))

PROVIDER_NAMES = _PROVIDER_NAMES_

DESCRIPTION_NAMES = _DESCRIPTION_NAMES_

VERSION_NAMES = $(addsuffix .version,$(PROVIDER_NAMES))

MAKEFLAGS += --no-builtin-rules
.SUFFIXES:
.SECONDEXPANSION:
.DELETE_ON_ERROR:
.SECONDARY:

all: descriptions ## Build everything (default)

boxes: $(BOX_NAMES) ## Build just the .box files

descriptions: $(DESCRIPTION_NAMES) ## Build the markdown description for each name/version

isos: $(ISO_NAMES) ## Download the ISOs

Makefile: Makefile.in configure.options configure $(RELEASE_FILES)
	./configure

%.md:
	mkdir -p "$(@D)"
	cat $^ > $@

%.box:
	packer build -on-error=$(ERROR_MODE) -only=$$(basename "$@" .box) -var-file=$< -var "iso_path=$(ISO_DIR)" -var "box_path=$(BOX_DIR)" -var "configdir=$(CONFIG_DIR)" $(BASE_FILE)

%.version: %.box ;

-include releases.mk boxes.mk isos.mk descriptions.mk

clean: ## Remove the generated build files
	rm -fv configure.options Makefile

help: ## Show this help
	@sed -n -E -e '/^[ a-zA-Z_-]+:.*## .*$$/p' $(MAKEFILE_LIST) | \
		sed -E -e 's/([^: ]+) ([^: ]+):/\1|\2:/' -e 's/^([^:]+):.+## *(.+)$$/"\1" "\2"/' | \
		xargs -n 2 printf -- '\033[36m%-25s\033[0m %s\n'


#@grep -h -E '^[ a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) |
#@ | awk 'BEGIN {FS = ":.*?## "}; {printf -- "\033[36m%-25s\033[0m %s\n", $$1, $$2}'
print-%: Makefile
	@echo '$*=$($*)'

.PHONY: all isos descriptions boxes
